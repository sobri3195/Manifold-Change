#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <ThingSpeak.h>

// Konfigurasi WiFi dan Thingspeak
const char* ssid = "nama_wifi";
const char* password = "password_wifi";
const char* server = "api.thingspeak.com";
const char* apikey = "apikey_thingspeak";

// Deklarasi pin sensor dan valve solenoid
const int sensorPin1 = A0;
const int sensorPin2 = A1;
const int sensorPin3 = A2;
const int valvePin1 = 2;
const int valvePin2 = 3;

// Deklarasi variabel untuk menyimpan nilai sensor
int sensorValue1;
int sensorValue2;
int sensorValue3;

// Inisialisasi koneksi WiFi dan Thingspeak
WiFiClient client;
WiFiClientSecure secureClient;
unsigned long lastConnectionTime = 0;

void setup() {
  // Konfigurasi pin valve solenoid sebagai output
  pinMode(valvePin1, OUTPUT);
  pinMode(valvePin2, OUTPUT);
  
  // Konfigurasi komunikasi serial untuk melihat nilai sensor
  Serial.begin(9600);

  // Koneksi ke WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  // Inisialisasi koneksi ke Thingspeak
  ThingSpeak.begin(client);
}

void loop() {
  // Baca nilai sensor
  sensorValue1 = analogRead(sensorPin1);
  sensorValue2 = analogRead(sensorPin2);
  sensorValue3 = analogRead(sensorPin3);
  
  // Cek nilai sensor dan ubah status valve solenoid
  if (sensorValue1 > 500 || sensorValue2 > 500) {
    digitalWrite(valvePin1, HIGH);
    digitalWrite(valvePin2, LOW);
  } else if (sensorValue3 > 500) {
    digitalWrite(valvePin1, LOW);
    digitalWrite(valvePin2, HIGH);
  } else {
    digitalWrite(valvePin1, LOW);
    digitalWrite(valvePin2, LOW);
  }
  
  // Kirim data sensor dan selenoid ke Thingspeak setiap 15 detik
  if (millis() - lastConnectionTime > 15000) {
    lastConnectionTime = millis();
    ThingSpeak.setField(1, sensorValue1);
    ThingSpeak.setField(2, sensorValue2);
    ThingSpeak.setField(3, sensorValue3);
    ThingSpeak.setField(4, digitalRead(valvePin1));
    ThingSpeak.setField(5, digitalRead(valvePin2));
    ThingSpeak.writeFields(1, apikey);
  }
  
  // Tampilkan nilai sensor pada monitor serial
  Serial.print("Sensor 1: ");
  Serial.println(sensorValue1);
  Serial.print("Sensor 2: ");
  Serial.println(sensorValue2);
  Serial.print("Sensor 3: ");
  Serial.println(sensorValue3);
  delay(1000);
}
